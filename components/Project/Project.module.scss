@use "../../styles/mixins";

.projectWrapper {
  .project {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    align-items: center;

    .projectContent {
      grid-area: 1 / 1 / -1 / 7;
      grid-column: 1 / -1;
      padding: 2rem;
      // background-color: hsl(var(--hue-color), 28%, 17%, 0.8);
      position: relative;
      // text-align: right;
      display: flex;
      flex-direction: column;
      // align-items: flex-end;
      gap: 1em;

      .projectTitle {
        font-weight: 600;
        font-size: 1.5rem;
        color: var(--color-text-heading);
      }

      .projectDescription {
        background-color: var(--color-background-alt);
        border-radius: 4px;
        padding: 1.5rem;
      }

      .projectStack {
        display: flex;
        gap: 1rem;
        font-style: italic;
      }

      .links {
        display: flex;
        align-items: center;
        // justify-content: flex-end;
        gap: 1em;

        a {
          color: var(--color-text-normal);
          display: flex;
          font-size: 1.25rem;

          &:hover,
          &:focus-visible {
            color: var(--color-primary);
          }
        }
      }
    }

    .projectImage {
      grid-area: 1 / 6 / -1 / -1;
      grid-column: 1 / -1;
      position: relative;
      z-index: -1;
      height: 100%;

      &::before {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: 4px;
        background-color: hsl(var(--hue-color), 25%, 25%);
        mix-blend-mode: multiply;
      }

      & > div {
        position: static !important;
        height: 100%;

        & > img {
          position: static !important;
          border-radius: 4px;
          width: 100% !important;
          height: 100% !important;
        }
      }
    }

    @include mixins.min-mq(sm) {
      .projectContent {
        grid-column: 7 / -1;
        text-align: right;
        align-items: flex-end;
      }

      .projectImage {
        grid-column: 1 / 8;
      }
    }

    @include mixins.min-mq(lg) {
      .projectContent {
        grid-column: 7 / -2;
      }

      .projectImage {
        grid-column: 2 / 8;
      }
    }
  }

  &:nth-child(even) {
    .project {
      .projectContent {
        // grid-column: 1 / 7;
        text-align: left;
        align-items: flex-start;
      }

      .projectImage {
        // grid-column: 6 / -1;
      }

      @include mixins.min-mq(md) {
        .projectContent {
          grid-column: 1 / 7;
        }

        .projectImage {
          grid-column: 6 / -1;
        }
      }

      @include mixins.min-mq(lg) {
        .projectContent {
          grid-column: 2 / 7;
        }

        .projectImage {
          grid-column: 6 / -2;
        }
      }
    }
  }
}
